// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace OASplash.Client.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for Color.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum Color
    {
        [EnumMember(Value = "black_and_white")]
        BlackAndWhite,
        [EnumMember(Value = "black")]
        Black,
        [EnumMember(Value = "white")]
        White,
        [EnumMember(Value = "yellow")]
        Yellow,
        [EnumMember(Value = "orange")]
        Orange,
        [EnumMember(Value = "red")]
        Red,
        [EnumMember(Value = "purple")]
        Purple,
        [EnumMember(Value = "magenta")]
        Magenta,
        [EnumMember(Value = "green")]
        Green,
        [EnumMember(Value = "teal")]
        Teal,
        [EnumMember(Value = "blue")]
        Blue
    }
    internal static class ColorEnumExtension
    {
        internal static string ToSerializedValue(this Color? value)
        {
            return value == null ? null : ((Color)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this Color value)
        {
            switch( value )
            {
                case Color.BlackAndWhite:
                    return "black_and_white";
                case Color.Black:
                    return "black";
                case Color.White:
                    return "white";
                case Color.Yellow:
                    return "yellow";
                case Color.Orange:
                    return "orange";
                case Color.Red:
                    return "red";
                case Color.Purple:
                    return "purple";
                case Color.Magenta:
                    return "magenta";
                case Color.Green:
                    return "green";
                case Color.Teal:
                    return "teal";
                case Color.Blue:
                    return "blue";
            }
            return null;
        }

        internal static Color? ParseColor(this string value)
        {
            switch( value )
            {
                case "black_and_white":
                    return Color.BlackAndWhite;
                case "black":
                    return Color.Black;
                case "white":
                    return Color.White;
                case "yellow":
                    return Color.Yellow;
                case "orange":
                    return Color.Orange;
                case "red":
                    return Color.Red;
                case "purple":
                    return Color.Purple;
                case "magenta":
                    return Color.Magenta;
                case "green":
                    return Color.Green;
                case "teal":
                    return Color.Teal;
                case "blue":
                    return Color.Blue;
            }
            return null;
        }
    }
}
