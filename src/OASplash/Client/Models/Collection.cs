// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace OASplash.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Collection
    {
        /// <summary>
        /// Initializes a new instance of the Collection class.
        /// </summary>
        public Collection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Collection class.
        /// </summary>
        public Collection(Photo coverPhoto = default(Photo), string description = default(string), bool? featured = default(bool?), int? id = default(int?), System.DateTime? lastCollectedAt = default(System.DateTime?), CollectionLinks links = default(CollectionLinks), bool? privateProperty = default(bool?), System.DateTime? publishedAt = default(System.DateTime?), string shareKey = default(string), string title = default(string), bool? totalPhotos = default(bool?), System.DateTime? updatedAt = default(System.DateTime?), User user = default(User))
        {
            CoverPhoto = coverPhoto;
            Description = description;
            Featured = featured;
            Id = id;
            LastCollectedAt = lastCollectedAt;
            Links = links;
            PrivateProperty = privateProperty;
            PublishedAt = publishedAt;
            ShareKey = shareKey;
            Title = title;
            TotalPhotos = totalPhotos;
            UpdatedAt = updatedAt;
            User = user;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cover_photo")]
        public Photo CoverPhoto { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "featured")]
        public bool? Featured { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_collected_at")]
        public System.DateTime? LastCollectedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "links")]
        public CollectionLinks Links { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "private")]
        public bool? PrivateProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "published_at")]
        public System.DateTime? PublishedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "share_key")]
        public string ShareKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "total_photos")]
        public bool? TotalPhotos { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updated_at")]
        public System.DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user")]
        public User User { get; set; }

    }
}
