// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace OASplash.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CurrentUser
    {
        /// <summary>
        /// Initializes a new instance of the CurrentUser class.
        /// </summary>
        public CurrentUser()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CurrentUser class.
        /// </summary>
        public CurrentUser(string bio = default(string), int? downloads = default(int?), string email = default(string), string firstName = default(string), bool? followedByUser = default(bool?), string id = default(string), string instagramUsername = default(string), string lastName = default(string), UserLinks links = default(UserLinks), string location = default(string), string portfolioUrl = default(string), int? totalCollections = default(int?), int? totalLikes = default(int?), int? totalPhotos = default(int?), string twitterUsername = default(string), string updatedAt = default(string), int? uploadsRemaining = default(int?), string username = default(string))
        {
            Bio = bio;
            Downloads = downloads;
            Email = email;
            FirstName = firstName;
            FollowedByUser = followedByUser;
            Id = id;
            InstagramUsername = instagramUsername;
            LastName = lastName;
            Links = links;
            Location = location;
            PortfolioUrl = portfolioUrl;
            TotalCollections = totalCollections;
            TotalLikes = totalLikes;
            TotalPhotos = totalPhotos;
            TwitterUsername = twitterUsername;
            UpdatedAt = updatedAt;
            UploadsRemaining = uploadsRemaining;
            Username = username;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bio")]
        public string Bio { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "downloads")]
        public int? Downloads { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "first_name")]
        public string FirstName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "followed_by_user")]
        public bool? FollowedByUser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "instagram_username")]
        public string InstagramUsername { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_name")]
        public string LastName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "links")]
        public UserLinks Links { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "portfolio_url")]
        public string PortfolioUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "total_collections")]
        public int? TotalCollections { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "total_likes")]
        public int? TotalLikes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "total_photos")]
        public int? TotalPhotos { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "twitter_username")]
        public string TwitterUsername { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updated_at")]
        public string UpdatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uploads_remaining")]
        public int? UploadsRemaining { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

    }
}
