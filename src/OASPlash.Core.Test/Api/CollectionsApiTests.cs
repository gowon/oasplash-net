/*
 * Unsplash API
 *
 * This document describes the resources that make up the official Unsplash JSON API. 
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using OASPlash.Core.Client;
using OASPlash.Core.Api;
// uncomment below to import models
//using OASPlash.Core.Model;

namespace OASPlash.Core.Test.Api
{
    /// <summary>
    ///  Class for testing CollectionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CollectionsApiTests : IDisposable
    {
        private CollectionsApi instance;

        public CollectionsApiTests()
        {
            instance = new CollectionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CollectionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CollectionsApi
            //Assert.IsType<CollectionsApi>(instance);
        }

        /// <summary>
        /// Test AddPhotoToCollection
        /// </summary>
        [Fact]
        public void AddPhotoToCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionId = null;
            //string photoId = null;
            //var response = instance.AddPhotoToCollection(collectionId, photoId);
            //Assert.IsType<OperationResponse>(response);
        }

        /// <summary>
        /// Test CreateNewCollection
        /// </summary>
        [Fact]
        public void CreateNewCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string title = null;
            //string description = null;
            //bool? _private = null;
            //var response = instance.CreateNewCollection(title, description, _private);
            //Assert.IsType<Collection>(response);
        }

        /// <summary>
        /// Test DeleteCollectionById
        /// </summary>
        [Fact]
        public void DeleteCollectionByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteCollectionById(id);
        }

        /// <summary>
        /// Test GetCollectionById
        /// </summary>
        [Fact]
        public void GetCollectionByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetCollectionById(id);
            //Assert.IsType<Collection>(response);
        }

        /// <summary>
        /// Test GetCollectionPhotos
        /// </summary>
        [Fact]
        public void GetCollectionPhotosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? page = null;
            //int? perPage = null;
            //Orientation? orientation = null;
            //var response = instance.GetCollectionPhotos(id, page, perPage, orientation);
            //Assert.IsType<List<Photo>>(response);
        }

        /// <summary>
        /// Test GetCollections
        /// </summary>
        [Fact]
        public void GetCollectionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? perPage = null;
            //var response = instance.GetCollections(page, perPage);
            //Assert.IsType<List<Collection>>(response);
        }

        /// <summary>
        /// Test GetRelatedCollections
        /// </summary>
        [Fact]
        public void GetRelatedCollectionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetRelatedCollections(id);
            //Assert.IsType<List<Collection>>(response);
        }

        /// <summary>
        /// Test RemovePhotoFromCollection
        /// </summary>
        [Fact]
        public void RemovePhotoFromCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionId = null;
            //string photoId = null;
            //var response = instance.RemovePhotoFromCollection(collectionId, photoId);
            //Assert.IsType<OperationResponse>(response);
        }

        /// <summary>
        /// Test UpdateCollection
        /// </summary>
        [Fact]
        public void UpdateCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string title = null;
            //string description = null;
            //bool? _private = null;
            //var response = instance.UpdateCollection(id, title, description, _private);
            //Assert.IsType<Collection>(response);
        }
    }
}
